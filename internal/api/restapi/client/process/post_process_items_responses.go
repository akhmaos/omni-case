// Code generated by go-swagger; DO NOT EDIT.

package process

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/akhmaos/omni-case/internal/api/restapi/models"
)

// PostProcessItemsReader is a Reader for the PostProcessItems structure.
type PostProcessItemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProcessItemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostProcessItemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostProcessItemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostProcessItemsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostProcessItemsOK creates a PostProcessItemsOK with default headers values
func NewPostProcessItemsOK() *PostProcessItemsOK {
	return &PostProcessItemsOK{}
}

/*
PostProcessItemsOK describes a response with status code 200, with default header values.

ok
*/
type PostProcessItemsOK struct {
	Payload *PostProcessItemsOKBody
}

// IsSuccess returns true when this post process items o k response has a 2xx status code
func (o *PostProcessItemsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post process items o k response has a 3xx status code
func (o *PostProcessItemsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post process items o k response has a 4xx status code
func (o *PostProcessItemsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post process items o k response has a 5xx status code
func (o *PostProcessItemsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post process items o k response a status code equal to that given
func (o *PostProcessItemsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post process items o k response
func (o *PostProcessItemsOK) Code() int {
	return 200
}

func (o *PostProcessItemsOK) Error() string {
	return fmt.Sprintf("[POST /process/items][%d] postProcessItemsOK  %+v", 200, o.Payload)
}

func (o *PostProcessItemsOK) String() string {
	return fmt.Sprintf("[POST /process/items][%d] postProcessItemsOK  %+v", 200, o.Payload)
}

func (o *PostProcessItemsOK) GetPayload() *PostProcessItemsOKBody {
	return o.Payload
}

func (o *PostProcessItemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProcessItemsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessItemsInternalServerError creates a PostProcessItemsInternalServerError with default headers values
func NewPostProcessItemsInternalServerError() *PostProcessItemsInternalServerError {
	return &PostProcessItemsInternalServerError{}
}

/*
PostProcessItemsInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type PostProcessItemsInternalServerError struct {
	Payload models.InternalServerError
}

// IsSuccess returns true when this post process items internal server error response has a 2xx status code
func (o *PostProcessItemsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post process items internal server error response has a 3xx status code
func (o *PostProcessItemsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post process items internal server error response has a 4xx status code
func (o *PostProcessItemsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post process items internal server error response has a 5xx status code
func (o *PostProcessItemsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post process items internal server error response a status code equal to that given
func (o *PostProcessItemsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post process items internal server error response
func (o *PostProcessItemsInternalServerError) Code() int {
	return 500
}

func (o *PostProcessItemsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /process/items][%d] postProcessItemsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProcessItemsInternalServerError) String() string {
	return fmt.Sprintf("[POST /process/items][%d] postProcessItemsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProcessItemsInternalServerError) GetPayload() models.InternalServerError {
	return o.Payload
}

func (o *PostProcessItemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessItemsDefault creates a PostProcessItemsDefault with default headers values
func NewPostProcessItemsDefault(code int) *PostProcessItemsDefault {
	return &PostProcessItemsDefault{
		_statusCode: code,
	}
}

/*
PostProcessItemsDefault describes a response with status code -1, with default header values.

error
*/
type PostProcessItemsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this post process items default response has a 2xx status code
func (o *PostProcessItemsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post process items default response has a 3xx status code
func (o *PostProcessItemsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post process items default response has a 4xx status code
func (o *PostProcessItemsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post process items default response has a 5xx status code
func (o *PostProcessItemsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post process items default response a status code equal to that given
func (o *PostProcessItemsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post process items default response
func (o *PostProcessItemsDefault) Code() int {
	return o._statusCode
}

func (o *PostProcessItemsDefault) Error() string {
	return fmt.Sprintf("[POST /process/items][%d] PostProcessItems default  %+v", o._statusCode, o.Payload)
}

func (o *PostProcessItemsDefault) String() string {
	return fmt.Sprintf("[POST /process/items][%d] PostProcessItems default  %+v", o._statusCode, o.Payload)
}

func (o *PostProcessItemsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostProcessItemsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostProcessItemsBody post process items body
swagger:model PostProcessItemsBody
*/
type PostProcessItemsBody struct {

	// items for processing
	// Required: true
	Items []*models.Item `json:"items"`
}

// Validate validates this post process items body
func (o *PostProcessItemsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProcessItemsBody) validateItems(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"items", "body", o.Items); err != nil {
		return err
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post process items body based on the context it is used
func (o *PostProcessItemsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProcessItemsBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProcessItemsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProcessItemsBody) UnmarshalBinary(b []byte) error {
	var res PostProcessItemsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostProcessItemsOKBody post process items o k body
swagger:model PostProcessItemsOKBody
*/
type PostProcessItemsOKBody struct {

	// ok
	Ok bool `json:"ok,omitempty"`
}

// Validate validates this post process items o k body
func (o *PostProcessItemsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post process items o k body based on context it is used
func (o *PostProcessItemsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProcessItemsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProcessItemsOKBody) UnmarshalBinary(b []byte) error {
	var res PostProcessItemsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
